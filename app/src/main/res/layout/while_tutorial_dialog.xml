<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools" android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:padding="@dimen/activity_horizontal_margin"
    tools:context="group5.cs3750.trainingwheels.Tutorial">

    <TextView
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:id="@+id/tutorial_title"
        android:layout_centerHorizontal="true"
        android:text="While Loops"
        android:textAppearance="?android:attr/textAppearanceLarge"/>

    <ViewFlipper
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        android:id="@+id/tutorial_flipper"
        android:layout_alignLeft="@+id/tutorial_button_container"
        android:layout_alignRight="@+id/tutorial_button_container"
        android:layout_below="@+id/tutorial_title"
        android:layout_above="@+id/tutorial_button_container">

        <!-- For loops -->
        <LinearLayout
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:orientation="vertical"
            android:gravity="center_horizontal">

            <TextView
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:text="A While loop is a control flow statement that allows code to be executed repeatedly based on a given boolean (true or false) condition.  The while loop can be thought of as a repeating statement.  The while contruct consists of a block of code and a condition/expression."
                android:layout_gravity="center_horizontal"
                android:padding="10dp"
                />
        </LinearLayout>

        <!-- For loops -->
        <LinearLayout
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:orientation="vertical"
            android:gravity="center_horizontal">

            <TextView
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:text="To create a While loop, drag it from the object panel into the programming area. You will be prompted to enter a condition type of True, Variable, or Custom Expression."
                android:layout_gravity="center_horizontal"
                android:padding="10dp" />
        </LinearLayout>

        <!-- For loops -->
        <LinearLayout
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:orientation="vertical"
            android:gravity="center_horizontal">

            <TextView
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:text="You are able to use previously set Variables as your condition type. This will allow you to build more verbose constructs. Pressing OK will give you more options to compare your variable with a terminating value."
                android:layout_gravity="center_horizontal"
                android:padding="10dp" />
        </LinearLayout>

        <!-- For loops -->
        <LinearLayout
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:orientation="vertical"
            android:gravity="center_horizontal">

            <TextView
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:text="You are also able to use custom expressions in your while statement.  This is for advanced users as it is easy to create infinite loops with this function. "
                android:layout_gravity="center_horizontal"
                android:padding="10dp" />
        </LinearLayout>
    </ViewFlipper>

    <LinearLayout
        android:id="@+id/tutorial_button_container"
        android:orientation="horizontal"
        android:layout_width="fill_parent"
        android:layout_height="wrap_content"
        android:layout_alignParentBottom="true"
        android:layout_centerHorizontal="true">

        <Button
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="Prev"
            android:id="@+id/tutorial_prev_button"
            android:layout_gravity="bottom"
            android:layout_weight=".3"/>

        <Button
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="Close"
            android:id="@+id/tutorial_close_button"
            android:layout_gravity="bottom"
            android:layout_weight=".3" />

        <Button
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="Next"
            android:id="@+id/tutorial_next_button"
            android:layout_gravity="bottom"
            android:layout_weight=".3" />
    </LinearLayout>
</RelativeLayout>
